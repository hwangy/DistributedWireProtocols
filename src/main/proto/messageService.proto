syntax = "proto3";

option java_multiple_files = true;
option java_package = "messenger.grpc";
option java_outer_classname = "MessengerProto";

package grpc;

service Messenger {
  rpc CreateAccount (CreateAccountRequest) returns (LoginReply) {}
  rpc DeleteAccount (DeleteAccountRequest) returns (StatusReply) {}
  rpc GetAccounts (GetAccountsRequest) returns (GetAccountsReply) {}
  rpc GetUndeliveredMessages (GetUndeliveredMessagesRequest) returns (GetUndeliveredMessagesReply) {}
  rpc SendMessage (SendMessageRequest) returns (StatusReply) {}
  rpc Login (LoginRequest) returns (LoginReply) {}
  rpc Logout (LogoutRequest) returns (StatusReply) {}
}

// Separate service for which the clients act *as the service.*
// This allows the server to call `SendMessage` to send a message
// to the correct client.
service MessageReceiver {
  rpc SendMessage (Message) returns (StatusReply) {}
}

// Indicates the success or failure of a request, with optional message
message Status {
  bool success = 1;
  optional string message = 2;
}

// A reply which is used for requests which only return a status.
message StatusReply {
  Status status = 1;
}

message CreateAccountRequest {
  string ip_address = 1;
  string username = 2;
}

// When a user logs in, a unique identifier is provided from the server
// to the client. This id should be used for future communication
message LoginReply {
  int32 connection_id = 1;
  Status status = 2;
}

message DeleteAccountRequest {
  int32 connection_id = 1;
  string username = 2;
}

message GetAccountsRequest {
  int32 connection_id = 1;
  string text_wildcard = 2;
}

message GetAccountsReply {
  Status status = 1;
  repeated string accounts = 2;
}

message GetUndeliveredMessagesRequest {
  int32 connection_id = 1;
  string username = 2;
}

message GetUndeliveredMessagesReply {
  Status status = 1;
  repeated Message messages = 2;
}

message Message {
  int64 sent_timestamp = 1;
  string sender = 2;
  string recipient = 3;
  string message = 4;
  optional int64 delivered_timestamp = 5;
}

message SendMessageRequest {
  int32 connection_id = 1;
  Message message = 2;
}

message LoginRequest {
  string ip_address = 1;
  int32 connection_id = 2;
  string username = 3;
}

message LogoutRequest {
  int32 connection_id = 1;
  string username = 2;
}